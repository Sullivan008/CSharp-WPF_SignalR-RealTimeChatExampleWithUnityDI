<UserControl x:Class="Application.Client.Windows.Implementations.MessageBox.Window.Views.MessageBox.MessageBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:enums="clr-namespace:Application.Client.Windows.Implementations.MessageBox.Window.Views.MessageBox.ViewModels.MessageBox.Enums"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="#ADADAD" />
            <Setter Property="Background" Value="#E4E4E4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter Width="{TemplateBinding Width}"
                                                  Height="{TemplateBinding Height}"
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  TextBlock.TextAlignment="Center"
                                                  Margin="-1, 6, 0, 0"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Control.BorderBrush" Value="#0076D7" />
                    <Setter Property="Control.Background" Value="#E5F1FB"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Control.BorderBrush" Value="#005CA8" />
                    <Setter Property="Control.Background" Value="#CFDAE3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Control.BorderBrush" Value="#bfbfbf" />
                    <Setter Property="Control.Background" Value="#cccccc"/>
                    <Setter Property="Control.Foreground" Value="#A0A0A0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" MinHeight="70" Background="White">
            <DockPanel>
                <Image DockPanel.Dock="Left" VerticalAlignment="top" Width="45" Height="45" Margin="30,20,0,20" HorizontalAlignment="Left">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageBoxIcon}" Value="{x:Static enums:MessageBoxIcon.Information}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Source" Value="/Application.Client.Windows.Implementations.MessageBox;component/Window/Views/MessageBox/Assets/icon-information.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxIcon}" Value="{x:Static enums:MessageBoxIcon.Warning}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Source" Value="/Application.Client.Windows.Implementations.MessageBox;component/Window/Views/MessageBox/Assets/icon-warning.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxIcon}" Value="{x:Static enums:MessageBoxIcon.Error}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Source" Value="/Application.Client.Windows.Implementations.MessageBox;component/Window/Views/MessageBox/Assets/icon-error.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxIcon}" Value="{x:Static enums:MessageBoxIcon.Question}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Source" Value="/Application.Client.Windows.Implementations.MessageBox;component/Window/Views/MessageBox/Assets/icon-question.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock Width="Auto" Margin="12,20,41,20" VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding ViewData.Message}"/>
            </DockPanel>
        </Grid>

        <Grid Grid.Row="1"
              MinHeight="50"
              Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" >
            <DockPanel Dock="Right" 
                       Margin="5,0,10,13">

                <Button DockPanel.Dock="Right" Width="80" Height="23" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Content="Cancel">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.OkCancel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.YesNoCancel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button DockPanel.Dock="Right" Width="80" Height="23" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Content="Ok" Command="{Binding OkCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.Ok}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.OkCancel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button DockPanel.Dock="Right" Width="80" Height="23" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Content="No">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.YesNo}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.YesNoCancel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button DockPanel.Dock="Right" Width="80" Height="23" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Content="Yes" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.YesNo}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageBoxButton}" Value="{x:Static enums:MessageBoxButton.YesNoCancel}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>