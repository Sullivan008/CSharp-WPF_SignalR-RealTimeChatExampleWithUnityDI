using Application.Client.Common.Commands;
using Application.Client.Windows.Core.ContentPresenter.Options.Models;
using Application.Client.Windows.Core.ContentPresenter.Options.Models.Interfaces;
using Application.Client.Windows.DialogWindow.Services.DialogWindow.Interfaces;
using Application.Client.Windows.DialogWindow.Services.DialogWindow.Options.Models;
using Application.Client.Windows.DialogWindow.Services.DialogWindow.Options.Models.Interfaces;
//using Application.Client.D.Windows;
using Application.Client.Windows.Implementations.Main.Window.Views.SignIn.ViewModels.SignIn;
using Application.Client.Windows.Implementations.MessageDialog.Window;
using Application.Client.Windows.Implementations.MessageDialog.Window.Models.DialogWindowResult;
using Application.Client.Windows.Implementations.MessageDialog.Window.ViewModels.MessageDialogWindow;
using Application.Client.Windows.Implementations.MessageDialog.Window.ViewModels.MessageDialogWindow.Initializer.Models;
using Application.Client.Windows.Implementations.MessageDialog.Window.ViewModels.MessageDialogWindowSettings.Initializer.Models;
using Application.Client.Windows.Implementations.MessageDialog.Window.Views.MessageContent.ViewModels.MessageContent;
using Application.Client.Windows.Implementations.MessageDialog.Window.Views.MessageContent.ViewModels.MessageContent.Initializer.Models;
using Application.Client.Windows.Implementations.MessageDialog.Window.Views.MessageContent.ViewModels.MessageContent.ViewData.Initializer.Models;
using Application.Client.Windows.NavigationWindow.Services.NavigationWindow.Interfaces;

namespace Application.Client.Windows.Implementations.Main.Window.Views.SignIn.Commands;

internal class OpenTestWindowCommand : AsyncCommandBase<SignInViewModel>
{
    private readonly IDialogWindowService _dialogWindowService;

    private readonly INavigationWindowService _navigationWindowService;

    public OpenTestWindowCommand(SignInViewModel callerViewModel, INavigationWindowService navigationWindowService, IDialogWindowService dialogWindowService) : base(callerViewModel)
    {
        _dialogWindowService = dialogWindowService;
        _navigationWindowService = navigationWindowService;
    }

    public override async Task ExecuteAsync()
    {
        IDialogWindowShowDialogOptionsModel showDialogOptions = new DialogWindowShowDialogOptionsModel<MessageDialogWindow, MessageDialogWindowViewModel, MessageDialogWindowViewModelInitializerModel>
        {
            WindowViewModelInitializerModel = new MessageDialogWindowViewModelInitializerModel
            {
                WindowSettings = new MessageDialogWindowSettingsViewModelInitializerModel
                {
                    Title = "Info Message Dialog"
                }
            }
        };

        IContentPresenterLoadOptions contentPresenterLoadOptions = new ContentPresenterLoadOptions<MessageContentViewModel, MessageContentViewModelInitializerModel>
        {
            ContentPresenterViewModelInitializerModel = new MessageContentViewModelInitializerModel
            {
                ViewDataInitializerModel = new MessageContentViewDataViewModelInitializerModel
                {
                    Message = "Lorem Ipsum"
                }
            }
        };

        MessageDialogWindowResult messageDialogWindowResult = 
            await _dialogWindowService.ShowDialogAsync<MessageDialogWindowResult>(showDialogOptions, contentPresenterLoadOptions);

        //await _applicationWindowService.ShowAsync<DWindow>();
    }
}